{
    "swagger": "2.0",
    "info": {
        "description": "A comprehensive API for managing pets,",
        "title": "Pet Indication Management API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/auth": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Authenticates the user using Basic Authentication and returns a token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate User",
                "responses": {
                    "200": {
                        "description": "Successful authentication, returns a token",
                        "schema": {
                            "$ref": "#/definitions/helpers.TokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid login or password",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error, couldn't generate token",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/getObjectsByNumLS/{num_ls}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves objects based on the provided num ls.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Get Objects by Num LS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number LS",
                        "name": "num_ls",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.LS_Object"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized, missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/id": {
            "get": {
                "description": "Retrieves the ID and name based on query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get ID and Name Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Age (optional)",
                        "name": "age",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/helpers.SuscessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request due to missing or unexpected parameters",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/setMeterIndicationByGuid/{guid}/{meter}/{requestId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sets a meter indication based on the provided UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meters"
                ],
                "summary": "Set Meter Indication by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meter UUID",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Meter",
                        "name": "meter",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request number",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully set meter indication",
                        "schema": {
                            "$ref": "#/definitions/helpers.SuscessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized, missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.LS_Object": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "day_night_type": {
                    "type": "string"
                },
                "device_guid": {
                    "type": "string"
                },
                "device_number": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "last_metering": {
                    "type": "number"
                },
                "num_ls": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "helpers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "helpers.SuscessResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "helpers.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}